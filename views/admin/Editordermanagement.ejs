<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order Details</title>
  <link rel="stylesheet" href="/css/admin.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css">
  <style>
    .approve-btn {
      display: hide;
      background-color: rgb(97, 182, 97);
      border: none;
      border-radius: 5px;
      padding: 8px;
      color: white;

    }

    .reject-btn {
      display: hide;
      background-color: rgb(146, 30, 30);
      border: none;
      border-radius: 5px;
      padding: 8px;
      color: white;
    }
  </style>
</head>

<body>
  <div class="container-scroller ">
    <!-- Sidebar -->
    <nav class="sidebar sidebar-offcanvas" id="sidebar">
      <div class="sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top">
        <a class="sidebar-brand brand-logo" href="#">MEN'S HUB </a>
        <a class="sidebar-brand brand-logo-mini" href="#"><img src="/images/logo-mini.svg" alt="logo" /></a>
        <a href="/home"><img style="width: 30px;height: 30px;" src="/images/img/home-logo/home2.png" alt="To home"></a>
      </div>
      <ul class="nav">
        <li class="nav-item menu-items">
          <a class="nav-link" href="/admin/dashboard">
            <span class="menu-title">Dashboard</span>
          </a>
        </li>
        <li class="nav-item menu-items ">
          <a class="nav-link" href="/admin/usermanagement">
            <span class="menu-title">User Management</span>
          </a>
        </li>
        <li class="nav-item menu-items">
          <a class="nav-link" href="/admin/products">
            <span class="menu-title">Products Management</span>
          </a>
        </li>
        <li class="nav-item menu-items forme">
          <a class="nav-link" href="/admin/ordermanagement">
            <span class="menu-title">Order Management</span>
          </a>
        </li>
        <li class="nav-item menu-items ">
          <a class="nav-link" href="/admin/categorymanagement">
            <span class="menu-title">Category Management</span>
          </a>
        </li>
        <li class="nav-item menu-items">
          <a class="nav-link" href="#">
            <span class="menu-title">Coupen Management</span>
          </a>
        </li>
        <li class="nav-item menu-items">
          <a class="nav-link" href="/admin/offermanagement">
            <span class="menu-title">Offer Management</span>
          </a>
        </li>
      </ul>
    </nav>

    <!-- Page Content -->
    <div class="container-fluid page-body-wrapper" style="background-color: #191c24; color: white;">
      <div class="custom-table-container mt-5" style="margin: 15%;">
        <h3 class="text-center">Order Details</h3>

        <!-- Product Details -->
        <div class="order-section">
          <h4>Product Details</h4>
          <table class="table table-bordered">
            <thead class="thead-dark">
              <tr>
                <th>Product Image</th>
                <th>Product Name</th>
                <th>Price</th>
                <th>Shipping Charge</th>
              </tr>
            </thead>
            <tbody>
              <% productsDetails.forEach(item => { %>
                <tr>
                  <td>
                    <% if (item.productData && item.productData.images && item.productData.images.length > 0) { %>
                      <img src="/<%= item.productData.images[0] %>" alt="<%= item.productData.name %>" style="width: 100px; height: auto;">
                    <% } else { %>
                      <span>No Image Available</span>
                    <% } %>
                  </td>
                  <td><span style="color: white;"><%= item.productData ? item.productData.name : 'Unknown Product' %></span></td>
                  <td><span style="color: white;">&#8377;<%= item.productData ? item.productData.offerPrice.toFixed(2) : '0.00' %></span></td>
                  <td><span style="color: white;"><%= item.products ? item.products.quantity : '50' %></span></td>
                </tr>
              <% }) %>
            
              <!-- Assuming order.totalAmount is where you need to access the total order price -->
              <tr>
                <td colspan="3" style="text-align: right; font-weight: bold; color: white;">Total Amount</td>
                <td style="font-weight: bold; color: white;">&#8377;<%= order.totalAmount.toFixed(2) %></td>
              </tr>
            </tbody>
            
          </table>
        </div>


        <!-- Shipping Details -->
        <div class="order-section mt-5">
          <h4>Shipping Details</h4>
          <table class="table table-bordered">
            <thead class="thead-dark">
              <tr>
                <th>House Number</th>
                <th>Country</th>
                <th>State</th>
                <th>District</th>
                <th>City</th>
                <th>Pincode</th>
              </tr>
            </thead>
            <tbody>
              <% if (deliveryAddress) { %>
                <tr>
                  <td><span style="color: white;">
                      <%= deliveryAddress.houseNumber %>
                    </span></td>
                  <td><span style="color: white;">
                      <%= deliveryAddress.country %>
                    </span></td>
                  <td><span style="color: white;">
                      <%= deliveryAddress.state %>
                    </span></td>
                  <td><span style="color: white;">
                      <%= deliveryAddress.district %>
                    </span></td>
                  <td><span style="color: white;">
                      <%= deliveryAddress.city %>
                    </span></td>
                  <td><span style="color: white;">
                      <%= deliveryAddress.pinCode %>
                    </span></td>
                </tr>
                <% } else { %>
                  <tr>
                    <td colspan="6">No Address Available</td>
                  </tr>
                  <% } %>
            </tbody>
          </table>
        </div>


        <!-- Order Status -->
        <div class="order-status-section mt-5">
          <h4>Order Status</h4>
          <form id="statusForm" method="POST">
            <div class="form-group" id="statusDropdownContainer">
              <label for="orderStatus">Status:</label>
              <select class="form-control" id="orderStatus">
                <option value="Pending" <%=order.status==='Pending' ? 'selected' : '' %>>Pending</option>
                <option value="Delivered" <%=order.status==='Delivered' ? 'selected' : '' %>>Delivered</option>
                <option value="Cancelled" <%=order.status==='Cancelled' ? 'selected' : '' %>>Cancelled</option>
                <option value="Cancelled" <%=order.status==='return' ? 'selected' : '' %>>Returned</option>
              </select>
            </div>
            <button type="submit" class="btn btn-primary">Update Status</button>
          </form>
          <br>
          <br>
          <% if (order.status === 'Return Requested') { %>
            <button class="btn btn-success approve-return-btn">Approve Return</button>
            <button class="btn btn-danger reject-return-btn">Reject Return</button>
          <% } %>
          
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const approveReturnBtn = document.querySelector(".approve-return-btn");
      const rejectReturnBtn = document.querySelector(".reject-return-btn");
  
      // Approve Return Logic
      if (approveReturnBtn) {
        approveReturnBtn.addEventListener("click", async function (e) {
          e.preventDefault();
  
          const orderId = "<%= order._id %>"; // Dynamically pass the order ID
  
          const result = await Swal.fire({
            title: "Are you sure?",
            text: "Do you want to approve this return request?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#28a745",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, approve it!",
            cancelButtonText: "No, keep it pending",
          });
  
          if (result.isConfirmed) {
            try {
              const response = await fetch(`/handle-return/${orderId}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ action: "approve" }),
              });
  
              const responseData = await response.json();
  
              if (response.ok && responseData.success) {
                await Swal.fire("Approved!", responseData.message, "success");
  
                // Update order status dynamically
                const statusElement = document.querySelector(".status-<%= order.statusClass %>");
                if (statusElement) {
                  statusElement.textContent = "Return Approved";
                  statusElement.className = "status-approved"; // Apply a different class for styling
                }
  
                // Hide buttons after action
                approveReturnBtn.style.display = "none";
                rejectReturnBtn.style.display = "none";
              } else {
                Swal.fire("Error", responseData.message, "error");
              }
            } catch (error) {
              console.error("Error approving return request:", error);
              Swal.fire("Error", "Something went wrong while approving the return.", "error");
            }
          }
        });
      }
  
      // Reject Return Logic
      if (rejectReturnBtn) {
        rejectReturnBtn.addEventListener("click", async function (e) {
          e.preventDefault();
  
          const orderId = "<%= order._id %>"; // Dynamically pass the order ID
  
          const result = await Swal.fire({
            title: "Are you sure?",
            text: "Do you want to reject this return request?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, reject it!",
            cancelButtonText: "No, keep it pending",
          });
  
          if (result.isConfirmed) {
            try {
              const response = await fetch(`/handle-return/${orderId}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ action: "reject" }),
              });
  
              const responseData = await response.json();
  
              if (response.ok && responseData.success) {
                await Swal.fire("Rejected!", responseData.message, "success");
  
                // Update order status dynamically
                const statusElement = document.querySelector(".status-<%= order.statusClass %>");
                if (statusElement) {
                  statusElement.textContent = "Return Rejected";
                  statusElement.className = "status-rejected"; // Apply a different class for styling
                }
  
                // Hide buttons after action
                approveReturnBtn.style.display = "none";
                rejectReturnBtn.style.display = "none";
              } else {
                Swal.fire("Error", responseData.message, "error");
              }
            } catch (error) {
              console.error("Error rejecting return request:", error);
              Swal.fire("Error", "Something went wrong while rejecting the return.", "error");
            }
          }
        });
      }
    });
  </script>
  

  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.getElementById('statusForm').addEventListener('submit', async function (e) {
      e.preventDefault();

      const status = document.getElementById('orderStatus').value;
      const orderId = '<%= order._id %>'; // Ensure this renders correctly

      if (!orderId) {
        console.error('Order ID is undefined. Please check the EJS rendering.');
        return;
      }

      console.log(orderId)

      try {
        const response = await fetch(`/admin/order/${orderId}/updatestatus`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status }),
        });

        const data = await response.json();
        if (data.success) {
          Swal.fire({
            title: 'Success!',
            text: data.message,
            icon: 'success',
            showConfirmButton: false,
          });
          setTimeout(() => {
            window.location.href = '/admin/ordermanagement';
          }, 1500)
        } else {
          Swal.fire({
            title: 'Error!',
            text: data.message,
            icon: 'error',
            confirmButtonText: 'OK',
          });
        }
      } catch (error) {
        console.error('Error updating status:', error);
        Swal.fire({
          title: 'Error!',
          text: 'Failed to update status.',
          icon: 'error',
          confirmButtonText: 'OK',
        });
      }
    });


  </script>
</body>

</html>