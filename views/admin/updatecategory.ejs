<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Admin Panel</title>
    <link
      href="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.css"
      rel="stylesheet"/>
      <script src="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.js"></script>
      <style>
        
      .image-container {
        position: relative;
        display: inline-block;
        width: 150px;
        height: 150px;
      }

      .cateImg {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        object-fit: cover;
      }

      .overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        opacity: 0;
        transition: opacity 0.3s ease;
      }

      .image-container:hover .overlay {
        opacity: 1;
      }

      .add-icon {
        color: white;
        font-size: 24px;
    }
</style>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<link rel="stylesheet" href="/css/admin.css">
    
  </head>
  <body>
    <input type="hidden" value="<%= category._id  %>" name="" id="categoryId"/>
    <div class="container-scroller">
      <!-- Sidebar -->
      <nav class="sidebar sidebar-offcanvas" id="sidebar">
        <div class="sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top">
          <a class="sidebar-brand brand-logo" href="index.html">MEN'S HUB </a>
          <a class="sidebar-brand brand-logo-mini" href="index.html"><img src="/images/logo-mini.svg" alt="logo" /></a>
        </div>
        <ul class="nav">
          <li class="nav-item menu-items">
            <a class="nav-link" href=/admin/dashboard">
              <span class="menu-title">Dashboard</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/usermanagement">
              <span class="menu-title">User Management</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/products">
              <span class="menu-title">Products Management</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/ordermanagement">
              <span class="menu-title">Order Management</span>
            </a>
          </li>
          <li class="nav-item menu-items forme" >
            <a class="nav-link" href="/admin/categorymanagement">
              <span class="menu-title" >Category Management</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/couponmanagement">
              <span class="menu-title">Coupen Management</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/offermanagement">
              <span class="menu-title">Offer Management</span>
            </a>
          </li>
        </ul>
      </nav>
      
      <div class="container">
        <h2 class="pt-5">Update Category</h2>
        <form
        class="forms-sample"
        id="productUpdateForm"
        enctype="multipart/form-data"
        novalidate
      >
        <div
          style="display: flex; justify-content: center"
          class="image-container"
        >
          <label
            style="display: flex; justify-content: center"
            for="categoryUpdateImage"
          >
            <img class="cateImg" src="/<%= category.image %>" alt="ghhg" />
            <div class="overlay">
              <span class="add-icon">+</span>
            </div>
          </label>
        </div>
        <div class="form-group">
          <input
            type="file"
            id="categoryUpdateImage"
            style="display: none"
            accept="image/*"
            onchange="previewAndCrop(event)"
          />
          <div id="cropPreviewUpdateSection"  style="display: none; width: 500px; height: 430px;">
            <img id="cropPreviewUpdate" style="width: 500px; height: 430px" />
            <button type="button" onclick="startCroppingUpdate()">
              Crop Image
            </button>
          </div>
        </div>
        <p class="error-message" id="categoryUpdateImageError"></p>
        <div class="form-group">
          <label for="productUpdateName">Name</label>
          <input
            type="text"
            class="form-control product-update-name"
            id="categoryUpdateName"
            name="name"
            value="<%= category.name %>"
            placeholder="Product Name"
            required
          />
          <p class="error-message" id="categoryUpdateNameError"></p>
        </div>
        <div class="modal-footer">
          <button
            type="submit"
            class="btn btn-primary"
            id="updateCategoryBtn"
          >
            Update Category
          </button>
        </div>
      </form>
</div>
<script>

const updateform=document.getElementById("updatecategory")
updateform.addEventListener("submit",async(e)=>{
    e.preventDefault()
    let categoryname=document.getElementById("categoryName").value
    console.log(categoryname);
    
    let categoryimage=document.getElementById("categoryImage").value
    console.log(categoryimage);
    
    let categoryid=document.getElementById("categoryId").value
    console.log(categoryid);
    
    try {
    const response=await fetch(`/admin/category/update/${categoryid}`,{
        method:"PUT",
        headers:{
            "Content-Type":"application/json"
        },
        body:JSON.stringify({
            categoryname,
            categoryimage,
            categoryid
        })
    })
    const data = await response.json();
        if (data.success) {
          alert('Category updated successfully!');
          window.location.href = '/admin/categorymanagement';
        } else {
          alert(data.message || 'Failed to update category');
        }
      } catch (error) {
        console.error('Error updating category:', error);
        alert('An error occurred while updating the category.');
}
});
</script>
<script>
  
      let cropper;
      let croppedImage = null;
      function previewAndCrop(event) {
        const file = event.target.files[0];
        if (!file) return;
        if (!["image/png", "image/jpg", "image/jpeg"].includes(file.type)) {
          const categoryUpdateImageError = document.querySelector(
            "#categoryUpdateImageError"
          );
          categoryUpdateImageError.style.display = "block";
          categoryUpdateImageError.textContent =
            "Only jpg, png, and jpeg allowed";
          return;
        }

        const cropPreview = document.getElementById("cropPreviewUpdate");
        const cropPreviewSection = document.getElementById(
          "cropPreviewUpdateSection"
        );

        cropPreview.src = URL.createObjectURL(file);
        cropPreviewSection.style.display = "block";
        if (cropper) {
          cropper.destroy();
        }

        cropper = new Cropper(cropPreview, {
          aspectRatio: NaN,
          viewMode: 1,
          autoCropArea: 1,
          scalable: true,
          zoomable: true,
          movable: true,
        });
      }

      function startCroppingUpdate() {
        if (!cropper) return;

        cropper.getCroppedCanvas().toBlob((blob) => {
          croppedImage = blob;
          document.getElementById("cropPreviewUpdateSection").style.display =
            "none";
          console.log("Cropped image stored for upload or further use.");
          console.log(croppedImage);
          changeImage();
        });
      }

      const categoryId = document.querySelector("#categoryId").value;
      console.log(categoryId);

      async function changeImage() {
        const categoryUpdateName = document.querySelector(
          "#categoryUpdateName"
        );
        const formData = new FormData();
        formData.append("categoryImage", croppedImage);
        formData.append("categoryName", categoryUpdateName.value);

        try {
          const response = await fetch(`/update-category-image/${categoryId}`, {
            method: "POST",
            body: formData,
          });

          const data = await response.json();
          if (data.val) {
            window.location.href = `/admin/category/update/${categoryId}`;
          }
        } catch (err) {
          console.log(err);
        }
      }

      document
        .querySelector("#updateCategoryBtn")
        .addEventListener("click", async (e) => {
          e.preventDefault();
          console.log("clicked");

          const categoryUpdateNameError = document.querySelector(
            "#categoryUpdateNameError"
          );
          const categoryUpdateName = document.querySelector(
            "#categoryUpdateName"
          ); 

          if (categoryUpdateName.value === "") {
            categoryUpdateNameError.style.display = "block";
            categoryUpdateNameError.textContent =
              "Category name should not be empty";
          } else {
            categoryUpdateNameError.style.display = "none";
            try {
              const response = await fetch(`/admin/category/update/${categoryId}`,
                {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({
                    categoryName: categoryUpdateName.value,
                  }),
                }
              );

              const data = await response.json();
              if (data.val) {
                swal("Success", "Category updated successfully!", "success");
                setTimeout(() => { 
                  window.location.href = `/admin/categorymanagement`;
                },1000);

              } else {
                categoryUpdateNameError.style.display = "block";
                categoryUpdateNameError.textContent = data.msg;
              }
            } catch (err) {
              console.log(err);
            }
          }
        });
</script>

</body>
</html>