<!-- /*
* Bootstrap 5
* Template Name: Furni
* Template Author: Untree.co
* Template URI: https://untree.co/
* License: https://creativecommons.org/licenses/by/3.0/
*/ -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <meta name="author" content="Untree.co" />
  <link rel="shortcut icon" href="favicon.png" />

  <meta name="description" content="" />
  <meta name="keywords" content="bootstrap, bootstrap4" />

  <!-- Bootstrap CSS -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
  <link href="/css/tiny-slider.css" rel="stylesheet" />
  <link rel="stylesheet" href="/css/style.css" />
  <link href="/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/css/checkout.css" />
  <title>
    Furni Free Bootstrap 5 Template for Furniture and Interior Design Websites
    by Untree.co
  </title>
</head>

<body>
  <%- include("./layouts/header.ejs") %>
    <nav aria-label="breadcrumb" class="mb-4">
      <ol class="breadcrumb">
        <li class="breadcrumb-item">
          <a href="/home" class="d-flex align-items-center">
            <span style="color: rgb(27, 94, 27)">Home</span>
          </a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Checkout</li>
      </ol>
    </nav>

    <!-- Start Hero Section -->
    <div class="hero">
      <div class="container">
        <div class="row justify-content-between">
          <div class="col-lg-5">
            <div class="intro-excerpt">
              <h1>Checkout</h1>
            </div>
          </div>
          <div class="col-lg-7"></div>
        </div>
      </div>
    </div>
    <!-- End Hero Section -->

    <div class="untree_co-section">
      <div class="container">
        <div class="row mb-5">
          <div class="col-md-12">
            
          </div>
        </div>
        <div class="row">
          <div class="col-md-6 mb-5 mb-md-0">
            <h2 class="h3 mb-3 text-black">Billing Details</h2>
            <div class="p-3 p-lg-5 border bg-white">
              <% addresses.forEach((data, index) => { %>
                <div data-id="<%= data._id %>" class="address-box">
                  <div class="address-boxes">
                    <!-- Radio button for selecting the address -->
                    <input type="radio" name="selectedAddress" id="address-<%= index %>" value="<%= data._id %>"
                      class="form-check-input" />
                    <label for="address-<%= index %>" class="form-check-label">
                      <p>House Number: <%= data.houseNumber %>
                      </p>
                      <p>Street: <%= data.street %>
                      </p>
                      <p>Landmark: <%= data.landmark %>
                      </p>
                      <p>City: <%= data.city %>
                      </p>
                      <p>District: <%= data.district %>
                      </p>
                      <p>State: <%= data.state %>
                      </p>
                      <p>Country: <%= data.country %>
                      </p>
                      <p>Pin Code: <%= data.pinCode %>
                      </p>
                    </label>
                  </div>
                  <!-- <div>
                    <button class="edit-address" data-id="">EDIT</button>
                    <button class="remove-address">REMOVE</button>
                  </div> -->
                </div>
              <% }); %>
            </div>
            

          </div>
          <div class="col-md-6">
            <div class="row mb-5">
              <div class="col-md-12">
                <h2 class="h3 mb-3 text-black">Coupon Code</h2>
                <div class="p-3 p-lg-5 border bg-white">
                  <label for="c_code" class="text-black mb-3">Enter your coupon code if you have one</label>
                  <div class="input-group w-75 couponcode-wrap">
                    <input type="text" class="form-control me-2" id="c_code" placeholder="Coupon Code"
                      aria-label="Coupon Code" aria-describedby="button-addon2" />
                    <div class="input-group-append">
                      <button class="btn btn-black btn-sm" type="button" id="button-addon2">
                        Apply
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="row mb-5">
              <div class="col-md-12">
                <h2 class="h3 mb-3 text-black">Your Order</h2>
                <div class="p-3 p-lg-5 border bg-white">
                  <table class="table site-block-order-table mb-5">
                    <thead>
                      <tr>
                        <th>Image</th>
                        <th>Product</th>
                        <th>Total</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% cart.items.forEach((item)=> { %>
                        <tr>
                          <td>
                            <img src="/<%= item.productId.images[0] %>" alt="<%= item.productId.name %>"
                              style="width: 50px; height: auto" />
                          </td>
                          <td>
                            <%= item.productId.name %>
                              <strong class="mx-2">x</strong>
                              <%= item.quantity %>
                          </td>
                          <td>₹<%= (item.offerPrice * item.quantity).toFixed(2) %>
                          </td>
                        </tr>
                        <% }); %>
                    </tbody>
                    <tfoot>
                      <tr>
                        <th colspan="2">Subtotal</th>
                        <td>₹<%= (cart.subtotal || 0).toFixed(2) %>
                        </td>
                      </tr>
                      <tr>
                        <th colspan="2">Shipping</th>
                        <td>₹<%= (cart.shippingCost || 0).toFixed(2) %>
                        </td>
                      </tr>
                      <tr>
                        <th colspan="2">Grand Total</th>
                        <td><strong>₹<%= (cart.cartTotal || 0).toFixed(2) %></strong></td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
              </div>
              <br>
              <br>
              <div class="border p-3 mb-3">
                <div>
                  <!-- Radio Button with ID -->
                  <input type="radio" name="payment" id="razerpay" />

                  <!-- Label for the Radio Button -->
                  <label for="razerpay">
                    <h3 class="h6 mb-0">
                      <a class="d-block" data-bs-toggle="collapse" href="#collapsebank" role="button"
                        aria-expanded="false" aria-controls="collapsepaypal" style="text-decoration: none">
                        Bank Transfer
                      </a>
                    </h3>
                  </label>
                </div>

                <div class="collapse" id="collapsebank">
                  <div class="py-2">
                    <p class="mb-0">
                      Make your payment directly into our bank account.
                      Please use your Order ID as the payment reference.
                      Your order won’t be shipped until the funds have
                      cleared in our account.
                    </p>
                  </div>
                </div>
              </div>

              <div class="border p-3 mb-3">
                <div>
                  <!-- Radio Button with ID -->
                  <input type="radio" name="payment" id="cash-on-delivery" />

                  <!-- Label for the Radio Button -->
                  <label for="cash-on-delivery">
                    <h3 class="h6 mb-0">
                      <a class="d-block" data-bs-toggle="collapse" href="#collapsecod" role="button"
                        aria-expanded="false" aria-controls="collapsecod" style="text-decoration: none">
                        Cash on Delivery
                      </a>
                    </h3>
                  </label>
                </div>
                <div class="collapse" id="collapsecod">
                  <div class="py-2">
                    <p class="mb-0">
                      Make your payment even after the product reached to you.
                      after the item is delivered to you, you can pay the
                      amount.
                    </p>
                  </div>
                </div>
              </div>

              <div class="border p-3 mb-5">
                <div>
                  <!-- Radio Button with ID -->
                  <input type="radio" name="payment" id="razorpay" />

                  <!-- Label for the Radio Button -->
                  <label for="razorpay">
                    <h3 class="h6 mb-0">
                      <a class="d-block" data-bs-toggle="collapse" href="#collapsepaypal" role="button"
                        aria-expanded="false" aria-controls="collapsepaypal" style="text-decoration: none">
                        Razor Pay
                      </a>
                    </h3>
                  </label>
                </div>

                <div class="collapse" id="collapsepaypal">
                  <div class="py-2">
                    <p class="mb-0">
                      Make your payment directly into our bank account.
                      Please use your Order ID as the payment reference.
                      Your order won’t be shipped until the funds have
                      cleared in our account.
                    </p>
                  </div>
                </div>
              </div>

              <div class="form-group">
                <button class="place-order-button" onclick="validateOrder()">
                  Place Order
                </button>
              </div>
              
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- </form> -->
    </div>
    </div>

    <%- include("./layouts/footer.ejs") %>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  async function validateOrder() {
      const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
      const selectedPayment = document.querySelector('input[name="payment"]:checked');

      // Validate inputs
      if (!selectedAddress) {
        Swal.fire({ icon: 'error', title: 'Address not selected', text: 'Please select an address.' });
        return;
      }
      if (!selectedPayment) {
        Swal.fire({ icon: 'error', title: 'Payment Method not selected', text: 'Please select a payment method.' });
        return;
      }

      try {
        // Fetch cart items
        const response = await fetch('/fetch-cart', { method: 'GET', headers: { 'Content-Type': 'application/json' } });
        const cartData = await response.json();
        const cartItems = cartData.cart.items;

        if (!cartItems || cartItems.length === 0) {
          Swal.fire({ icon: 'error', title: 'Cart is Empty', text: 'Add items to the cart before placing an order.' });
          return;
        }

        const orderPayload = {
          selectedAddress: selectedAddress.value,
          items: cartItems,
        };

        if (selectedPayment.id === 'cash-on-delivery') {
          // Place COD order
          const orderResponse = await fetch('/place-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(orderPayload),
          });
          const orderData = await orderResponse.json();

          if (orderData.val) {
            Swal.fire({ icon: 'success', title: 'Order Placed', text: orderData.msg }).then(() => {
              window.location = '/thankyou';
            });
          } else {
            Swal.fire({ icon: 'error', title: 'Order Failed', text: orderData.msg });
          }
        } else if (selectedPayment.id === 'razorpay') {
          // Place Razorpay order
          const razorpayOrderResponse = await fetch('/place-order-razorpay', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(orderPayload),
          });
          const razorpayOrderData = await razorpayOrderResponse.json();

          if (razorpayOrderData.val) {
            const razorpayOptions = {
              key: 'rzp_test_mUKkruYO0ysf3W', // Your Razorpay Key
              amount: razorpayOrderData.amount, // Amount in paise
              currency: 'INR',
              name: 'Your Company Name',
              description: 'Order Payment',
              order_id: razorpayOrderData.razorpayOrderId,
              handler: async function (response) {
                // Verify payment
                const verifyResponse = await fetch('/verify-razorpay-payment', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({
                    paymentId: response.razorpay_payment_id,
                    orderId: razorpayOrderData.razorpayOrderId,
                    razorpaySignature: response.razorpay_signature,
                  }),
                });
                const verifyData = await verifyResponse.json();

                if (verifyData.success) {
                  Swal.fire({ icon: 'success', title: 'Payment Successful', text: 'Order placed successfully!' }).then(() => {
                    window.location = '/thankyou';
                  });
                } else {
                  Swal.fire({ icon: 'error', title: 'Payment Failed', text: verifyData.msg });
                }
              },
              prefill: {
                name: 'Customer Name',
                email: 'customer@example.com',
              },
              theme: {
                color: '#F37254',
              },
            };

            const razorpay = new Razorpay(razorpayOptions);
            razorpay.open();
          } else {
            Swal.fire({ icon: 'error', title: 'Order Creation Failed', text: razorpayOrderData.msg });
          }
        }
      } catch (error) {
        console.error('Error during order process:', error);
        Swal.fire({ icon: 'error', title: 'Error', text: 'An error occurred while placing the order.' });
      }
    }

</script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
// async function validateOrder() {
//   const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
//   const selectedPayment = document.querySelector('input[name="payment"]:checked');

//   if (!selectedAddress) {
//     Swal.fire({
//       icon: 'error',
//       title: 'Address not selected',
//       text: 'Please select an address before placing your order.',
//       confirmButtonText: 'OK',
//     });
//     return false;
//   }

//   if (!selectedPayment) {
//     Swal.fire({
//       icon: 'error',
//       title: 'Payment method not selected',
//       text: 'Please select a payment method before placing your order.',
//       confirmButtonText: 'OK',
//     });
//     return false;
//   }

//   try {
//     // Fetch cart items from the database
//     const response = await fetch('/fetch-cart', {
//       method: 'GET',
//       headers: { 'Content-Type': 'application/json' },
//     });

//     if (!response.ok) {
//       throw new Error('Failed to fetch cart items.');
//     }

//     const cartData = await response.json();
//     const cartItems = cartData.cart.items; // Access the items array
//     console.log(cartItems);

//     if (!cartItems || cartItems.length === 0) {
//       Swal.fire({
//         icon: 'error',
//         title: 'Cart is empty',
//         text: 'Add items to the cart before placing an order.',
//         confirmButtonText: 'OK',
//       });
//       return false;
//     }

//     // Send the order details to the backend
//     const orderResponse = await fetch('/place-order', {
//       method: 'POST',
//       headers: { 'Content-Type': 'application/json' },
//       body: JSON.stringify({
//         selectedAddress: selectedAddress.value,
//         paymentMethod: selectedPayment.id,
//         items: cartItems,
//       }),
//     });

//     const orderData = await orderResponse.json();

//     if (orderData.val) {
//       Swal.fire({
//         icon: 'success',
//         title: 'Order Placed Successfully',
//         text: orderData.msg,
//         confirmButtonText: 'OK',
//       }).then(() => {
//         window.location = '/thankyou'; // Redirect to thank you page
//       });
//     } else {
//       Swal.fire({
//         icon: 'error',
//         title: 'Error',
//         text: orderData.msg,
//         confirmButtonText: 'OK',
//       });
//     }
//   } catch (error) {
//     console.error('Error during order validation:', error);
//     Swal.fire({
//       icon: 'error',
//       title: 'Error',
//       text: 'An error occurred while placing your order.',
//       confirmButtonText: 'OK',
//     });
//   }
// }


</script>

      <script src="js/bootstrap.bundle.min.js"></script>
      <script src="js/tiny-slider.js"></script>
      <script src="js/custom.js"></script>
</body>

</html>